<%- include('layout', { body: '<h1>Incomes</h1>' }) %>
<h1>Incomes</h1>

<button class="btn btn-primary" data-toggle="modal" data-target="#addIncomeModal">Add Income</button>
<table class="table mt-4">
    <thead>
        <tr>
            <th>ID</th>
            <th>Title</th>
            <th>Amount</th>
            <th>Date</th>
            <th>Note</th>
            <th>Member</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        <% incomes.forEach(income => { %>
        <tr>
            <td><%= income._id %></td>
            <td><%= income.title %></td>
            <td><%= income.amount %></td>
            <td><%= income.date.toLocaleDateString() %></td>
            <td><%= income.note %></td>
            <td><%= income.member ? income.member.name : 'No Member' %></td>
            <td>
                <button class="btn btn-warning" data-toggle="modal" data-target="#editIncomeModal" onclick="editIncome('<%= income._id %>', '<%= income.title %>', '<%= income.amount %>', '<%= income.date.toISOString() %>', '<%= income.note %>', '<%= income.member ? income.member._id : '' %>')">Edit</button>
                <button class="btn btn-danger" onclick="deleteIncome('<%= income._id %>')">Delete</button>
            </td>
        </tr>
        <% }) %>
    </tbody>
</table>

<!-- Add Income Modal -->
<div class="modal fade" id="addIncomeModal" tabindex="-1" role="dialog" aria-labelledby="addIncomeModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addIncomeModalLabel">Add Income</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addIncomeForm">
                    <div class="form-group">
                        <label for="incomeTitle">Title</label>
                        <input type="text" class="form-control" id="incomeTitle" name="title" required>
                    </div>
                    <div class="form-group">
                        <label for="incomeAmount">Amount</label>
                        <input type="number" class="form-control" id="incomeAmount" name="amount" required>
                    </div>
                    <div class="form-group">
                        <label for="incomeDate">Date</label>
                        <input type="date" class="form-control" id="incomeDate" name="date" required>
                    </div>
                    <div class="form-group">
                        <label for="incomeNote">Note</label>
                        <textarea class="form-control" id="incomeNote" name="note" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="incomeMember">Member</label>
                        <select class="form-control" id="incomeMember" name="member" required>
                            <% members.forEach(member => { %>
                                <option value="<%= member._id %>"><%= member.name %></option>
                            <% }) %>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Add Income</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Income Modal -->
<div class="modal fade" id="editIncomeModal" tabindex="-1" role="dialog" aria-labelledby="editIncomeModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editIncomeModalLabel">Edit Income</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editIncomeForm">
                    <input type="hidden" id="editIncomeId" name="id">
                    <div class="form-group">
                        <label for="editIncomeTitle">Title</label>
                        <input type="text" class="form-control" id="editIncomeTitle" name="title" required>
                    </div>
                    <div class="form-group">
                        <label for="editIncomeAmount">Amount</label>
                        <input type="number" class="form-control" id="editIncomeAmount" name="amount" required>
                    </div>
                    <div class="form-group">
                        <label for="editIncomeDate">Date</label>
                        <input type="date" class="form-control" id="editIncomeDate" name="date" required>
                    </div>
                    <div class="form-group">
                        <label for="editIncomeNote">Note</label>
                        <textarea class="form-control" id="editIncomeNote" name="note" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="editIncomeMember">Member</label>
                        <select class="form-control" id="editIncomeMember" name="member" required>
                            <% members.forEach(member => { %>
                                <option value="<%= member._id %>"><%= member.name %></option>
                            <% }) %>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function editIncome(id, title, amount, date, note, member) {
        document.getElementById('editIncomeId').value = id;
        document.getElementById('editIncomeTitle').value = title;
        document.getElementById('editIncomeAmount').value = amount;
        document.getElementById('editIncomeDate').value = new Date(date).toISOString().split('T')[0];
        document.getElementById('editIncomeNote').value = note;
        document.getElementById('editIncomeMember').value = member;
    }

    document.getElementById('addIncomeForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        const formData = new FormData(this);
        const data = Object.fromEntries(formData);
        const response = await fetch('/incomes/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify(data)
        });
        const result = await response.json();
        if (result.success) {
            location.reload();
        } else {
            alert('Error adding income: ' + result.message);
        }
    });

    document.getElementById('editIncomeForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        const formData = new FormData(this);
        const data = Object.fromEntries(formData);
        const response = await fetch(`/incomes/edit/${data.id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify(data)
        });
        const result = await response.json();
        if (result.success) {
            location.reload();
        } else {
            alert('Error updating income: ' + result.message);
        }
    });

    function deleteIncome(id) {
        if (confirm('Are you sure you want to delete this income?')) {
            fetch(`/incomes/delete/${id}`, {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    location.reload();
                } else {
                    alert('Error deleting income: ' + result.message);
                }
            });
        }
    }
</script>
